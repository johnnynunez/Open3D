cmake_minimum_required(VERSION 3.18)
find_package(Git REQUIRED)

if(NOT DEFINED WEBRTC_SRC)
    message(FATAL_ERROR "WEBRTC_SRC not defined")
endif()
if(NOT DEFINED DEPOT_TOOLS_DIR)
    message(FATAL_ERROR "DEPOT_TOOLS_DIR not defined")
endif()
if(NOT DEFINED PATCH_DIR)
    message(FATAL_ERROR "PATCH_DIR not defined")
endif()
if(NOT DEFINED EXT_WEBRTC_DIR)
    message(FATAL_ERROR "EXT_WEBRTC_DIR not defined")
endif()

set(download_needed OFF)
if(NOT EXISTS "${WEBRTC_SRC}/src")
    set(download_needed ON)
endif()

if(download_needed)
    message(STATUS "Downloading WebRTC sources to ${WEBRTC_SRC}")
    file(MAKE_DIRECTORY "${WEBRTC_SRC}")
    if(NOT EXISTS "${DEPOT_TOOLS_DIR}")
        execute_process(COMMAND ${GIT_EXECUTABLE} clone https://chromium.googlesource.com/chromium/tools/depot_tools.git "${DEPOT_TOOLS_DIR}" RESULT_VARIABLE err)
        if(err)
            message(FATAL_ERROR "Failed to clone depot_tools")
        endif()
    endif()
    execute_process(COMMAND ${DEPOT_TOOLS_DIR}/fetch --no-history webrtc WORKING_DIRECTORY "${WEBRTC_SRC}/.." RESULT_VARIABLE err)
    if(err)
        message(FATAL_ERROR "Failed to fetch WebRTC")
    endif()
    execute_process(COMMAND ${GIT_EXECUTABLE} -C "${WEBRTC_SRC}/src" apply "${PATCH_DIR}/0001-src-enable-rtc_use_cxx11_abi-option.patch" RESULT_VARIABLE err)
    if(err)
        message(FATAL_ERROR "Failed to apply src patch")
    endif()
    execute_process(COMMAND ${GIT_EXECUTABLE} -C "${WEBRTC_SRC}/src/build" apply "${PATCH_DIR}/0001-build-enable-rtc_use_cxx11_abi-option.patch" RESULT_VARIABLE err)
    if(err)
        message(FATAL_ERROR "Failed to apply build patch")
    endif()
    execute_process(COMMAND ${GIT_EXECUTABLE} -C "${WEBRTC_SRC}/src/third_party" apply "${PATCH_DIR}/0001-third_party-enable-rtc_use_cxx11_abi-option.patch" RESULT_VARIABLE err)
    if(err)
        message(FATAL_ERROR "Failed to apply third_party patch")
    endif()
endif()

file(REMOVE_RECURSE "${EXT_WEBRTC_DIR}")
file(COPY "${WEBRTC_SRC}/" DESTINATION "${EXT_WEBRTC_DIR}")